#nullable enable
Bridge.Bus.BusBridgeBuilder
Bridge.Bus.BusBridgeBuilder.AddConsumer<TConsumer, TMessage>(string! queueName, System.Action<Bridge.Bus.ConsumerConfiguration!>? configure = null) -> Bridge.Bus.BusBridgeBuilder!
Bridge.Bus.BusBridgeBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Bridge.Bus.ConsumerConfiguration
Bridge.Bus.ConsumerConfiguration.MaxProcessingTime.get -> System.TimeSpan
Bridge.Bus.ConsumerConfiguration.MaxProcessingTime.set -> void
Bridge.Bus.IConsumer<TMessage>
Bridge.Bus.IConsumer<TMessage>.Handle(TMessage message, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Bridge.Bus.IMessageBus
Bridge.Bus.IMessageBus.Schedule<TMessage>(TMessage message, string! queue, System.DateTimeOffset enqueueTime, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Bridge.Bus.IMessageBus.Send<TMessage>(TMessage message, string! queue, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
static Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBridgeBus(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Bridge.Bus.BusBridgeBuilder!