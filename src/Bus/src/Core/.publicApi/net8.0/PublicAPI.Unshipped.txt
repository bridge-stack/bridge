#nullable enable
Bridge.Bus.BusBridgeBuilder
Bridge.Bus.BusBridgeBuilder.AddConsumer<TConsumer, TMessage>(string! queueName) -> Bridge.Bus.BusBridgeBuilder!
Bridge.Bus.BusBridgeBuilder.BusBridgeBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> void
Bridge.Bus.BusBridgeBuilder.RegisterBrokerMessageHandler<T>(System.Func<System.IServiceProvider!, T!>! brokerMessageHandlerFactory) -> void
Bridge.Bus.BusBridgeBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Bridge.Bus.IBrokerMessageHandler
Bridge.Bus.IConsumer<TMessage>
Bridge.Bus.IConsumer<TMessage>.Handle(TMessage message, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions
static Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBridgeBus(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Bridge.Bus.BusBridgeBuilder!